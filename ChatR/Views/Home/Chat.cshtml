@{
    ViewBag.Title = "Chat";
}

<!--[if gte IE 9]>
  <style type="text/css">
    .gradient {
       filter: none;
    }
  </style>
<![endif]-->

@if (false) { 
    <script src="../../Scripts/jquery-1.7.2-vsdoc.js" type="text/javascript"></script>
}

<div id="header" class="gradient">
    <h2>ChatR</h2>
</div>

<div id="myContainer" class="container-fluid">    
    <div class="row-fluid">
        <!-- This  is the contact box -->
        <div id="users-list" class="span2" data-bind="foreach: contacts">
            <p data-bind="text: username"></p>        
        </div>
        <!-- This  is the chat box -->
        <div id="chat-list" class="span8" data-bind="foreach: messages">
            <ul>
                <li>
                    <div class="chat-listitem-username" data-bind="text: Username">                     
                    </div>                
                    <div class="chat-listitem-message" data-bind="html: Message">                    
                    </div>                
                    <div class="chat-listitem-timestamp" data-bind="text: Timestamp.toLocaleTimeString()">
                    </div>
                </li>
            </ul>
        </div>
    </div>    
    <div id="compose" class="row-fluid">
        <div class="span2"></div>
        <div class="span10">                            
                <textarea id="compose-box" rows="2" cols="50" placeholder="Type your message here"></textarea>     
                <button id="send-btn" type="submit" class="btn btn-large btn-primary">Send</button>            
        </div>        
    </div>
</div>

<script type="text/javascript" src="@Url.Content("/signalr/hubs")"></script>
<script type="text/javascript">

    var ChatMessage = function(sender, content, dateSent) {
        var self = this;
        self.Username = sender;
        self.Message = content;
        if (dateSent != null) {
            self.Timestamp = dateSent;
        }
    }

    var User = function (username) {
        var self = this;
        self.username = username;
    }

    var ChatViewModel = function () {
        var self = this;
        self.messages = ko.observableArray();
    }

    var ConnectedUsersViewModel = function () {
        var self = this;
        self.contacts = ko.observableArray();
    }

           
    $(document).ready(function () {

        var chat = new ChatViewModel();
        var users = new ConnectedUsersViewModel();
        var currentUser = new User("@ViewBag.username");
        

        // Proxy creation
        var chatR = $.connection.chatHub; // chat is the name of the Hub as declared in server side code
        chatR.username = "@ViewBag.username";
        
        /* Not useful at the moment
        chatR.connected = function () {
        chatR.joined();
        } */

        // Client-side event handlers, as declared inside the  Hub
        chatR.onMessageReceived = function (message) {            
            chat.messages.push(new ChatMessage(message.Username, message.Message, new Date(message.Timestamp)));
        }

        chatR.leaves = function (connectionId, username, timestamp) {
            var disconnectedUser = new User(username);
            users.contacts.remove(disconnectedUser);
        }

        chatR.joins = function (connectionId, username, timestamp) {
            var connectedUser = new User(username);
            users.contacts.push(connectedUser);
        }

        /* Not usefl at the moment
        chatR.rejoined = function (connectionId, username, timestamp) {
        var connectedUser = new User(username);
        users.contacts.push(connectedUser);
        }*/

        $("#send-btn").click(function () {
            var content = $("#compose-box").val();
            if (content != "" && content != null) {
                var msg = new ChatMessage(currentUser.username, content);
                chatR.send(msg).done(function () {
                    $("#compose-box").val("");
                }).fail(function (e) {
                    alert("Could not connect to server");
                });
            }
        });

        ko.applyBindings(users, $("#users-list")[0]);
        ko.applyBindings(chat, $("#chat-list")[0]);

        // Step 1: Start the connection
        // Step 2: Get all currenlty connected users
        // Step 3: Join to the chat and nmotify all the clients (me included) that there is a new user connected
        $.connection.hub.start()
                        .done(function () {
                            chatR.getConnectedUsers()
                                     .done(function (connectedUsers) {
                                         ko.utils.arrayForEach(connectedUsers, function (item) {
                                             users.contacts.push(new User(item.Username));
                                         });
                                     }).done(function () {
                                         chatR.joined();
                                     });
                        });
    });


</script>
